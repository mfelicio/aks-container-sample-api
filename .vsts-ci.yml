phases:

- phase: Build_And_Package_Linux
  #queue: Hosted Linux Preview (Hosted Linux Preview)
  #queue:
  #  demands:
  #  - agent.name -equals Hosted Linux Preview 10
  steps:
  - bash: |
      echo "deb [arch=amd64] https://packages.microsoft.com/repos/azure-cli/ wheezy main" | tee /etc/apt/sources.list.d/azure-cli.list
      apt-key adv --keyserver packages.microsoft.com --recv-keys 417A0893
      apt-get install -y --no-install-recommends apt-transport-https
      apt-get update
      apt-get install -y --no-install-recommends azure-cli
      echo Printing azure-cli version
      az --version
    displayName: Install Azure Cli
    workingDirectory: $(system.defaultWorkingDirectory)
  
  - bash: |
      echo current dir is $PWD
      ls
    workingDirectory: $(system.defaultWorkingDirectory)
    displayName: Print Working directory
    
  - bash: |
      dotnet restore src,
      dotnet build src
      dotnet test src/Sample.Tests
      dotnet publish src/Sample.Web.Api/Sample.Web.Api.csproj -c Release -f netcoreapp2.0
    displayName: Build, Test, Publish
    workingDirectory: $(system.defaultWorkingDirectory)
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      
  - bash: |
      cp src/Dockerfile src/Sample.Web.Api/bin/Release/netcoreapp2.0/publish/
      docker build --rm --no-cache -t $DOCKER_IMAGE_NAME_WITH_REGISTRY src/Sample.Web.Api/bin/Release/netcoreapp2.0/publish/
      docker login $DOCKER_REGISTRY_URI -u $DOCKER_REGISTRY_SERVER_USERNAME -p $DOCKER_REGISTRY_SERVER_PASSWORD
      docker push $DOCKER_IMAGE_NAME_WITH_REGISTRY
    displayName: Push Docker Image
    workingDirectory: $(system.defaultWorkingDirectory)
  
  - bash: |
      echo Deploying App to kubernetes cluster
      #az --version
      az login --service-principal -u $SERVICE_PRINCIPAL_ID -p $SERVICE_PRINCIPAL_PWD -t $TENANT
      az account set --subcription $AZURE_SUBSCRIPTION_ID 
      az provider register -n Microsoft.ContainerService
      az aks install-cli
      az aks get-credentials --resource-group $RESOURCE_GROUP --name $CLUSTER_NAME
      kubectl apply -f src/container-api.yml
      #kubectl rolling-update container-api -f src/container-api.yml
    
#- phase: Deploy_Windows
#  queue: Hosted VS2017 (Hosted VS2017)
#  steps:
#  - script: az --version
